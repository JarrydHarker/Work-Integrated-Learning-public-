@model StudentReportViewModel

@{
    Layout = "_StudentLayout";
}
<div class="head-title">
    <div class="left">
        <h1>Student Report</h1>
        <ul class="breadcrumb">
            <li><a href="#">Home</a></li>
            <li><i class='bx bx-chevron-right'></i></li>
            <li><a class="active" href="#">Student Report</a></li>
        </ul>
    </div>
    <div class="right">
        <!-- Filter Icon -->
        <div class="filter-icons">
            <i class="bi bi-filter" id="filter-icon" title="Open Filter"></i>
            <i class="bi bi-arrow-counterclockwise" id="reset-icon" title="Reset Filters"></i>
        </div>
    

        <!-- Modal Section -->
        <div class="filter-modal" id="filter-modal">
            <div class="modal-content">
                <span class="close-btn" id="close-modal">&times;</span>
                <h3>Filter By:</h3>
                <form method="get" asp-action="Report" class="filter-form">
                    <div class="filter-group">
                        <label for="moduleCode">Module:</label>
                        <select id="moduleCode" name="moduleCode" asp-items="@Model.GetModuleCodesForFilter()">
                            <option value="">Select Module</option>
                        </select>
                    </div>
                    <div class="filter-group">
                        <label for="status">Status:</label>
                        <select id="status" name="status" asp-items="@Model.GetStatii()">
                            <option value="">Select Status</option>
                        </select>
                    </div>
                    <div class="filter-group">
                        <label for="start">Start Date:</label>
                        <input type="date" id="start" name="start" class="form-control" />
                    </div>
                    <div class="filter-group">
                        <label for="end">End Date:</label>
                        <input type="date" id="end" name="end" class="form-control" />
                    </div>
                    <button type="submit" class="filter-button">Apply Filters</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="table-data">
    <div class="order">
        <!-- Table Section -->
        <div class="table-container">
            <div class="table-responsive">
                <table class="styled-table">
                    <thead>
                        <tr>
                            <th>Module Code</th>
                            <th>Class</th>
                            <th>Lecture Date</th>
                            <th>Time</th>
                            <th>Attendance</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var lecture in Model.lstLectures)
                        {
                            <tr>
                                <td>@lecture.ModuleCode</td>
                                <td>@lecture.ClassroomCode</td>
                                <td>@lecture.LectureDate</td>
                                <td>@lecture.ScanIn - @lecture.ScanOut</td>
                                <td>@Model.GetAttendance(lecture)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>



<style>

    /* Adjust Icon Sizes */
    .filter-icons i {
        font-size: 34px; /* Consistent size for both bx and bi icons */
        line-height: 1; /* Ensure alignment */
        display: inline-block; /* For proper spacing */
        cursor: pointer;
    }

    #filter-icon {
        color: #007bff; /* Blue */
    }

        #filter-icon:hover {
            color: #0056b3;
        }

    #reset-icon {
        color: var(--dark); /* Use your dark theme color */
    }





    /* Modal Styles */
    .filter-modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
        overflow: hidden;
    }

    .modal-content {
        background-color: var(--light);
        margin: 10% auto;
        padding: 1.5rem;
        border-radius: 8px;
        width: 90%;
        color: var(--dark);
        max-width: 500px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }

    .styled-table thead tr {
        background-color: #3C91E6;
        color: #ffffff;
        text-align: left;
    }

    .styled-table th,
    .styled-table td {
        padding: 12px 15px;
        border-bottom: 1px solid #ddd;
    }

    .close-btn {
        float: right;
        font-size: 24px;
        font-weight: bold;
        color: var(--dark);
        cursor: pointer;
    }

        .close-btn:hover {
            color: #007bff;
        }

    .filter-group label {
        font-size: 0.9rem;
        color: var(--dark);
    }

    .filter-form select,
    .filter-form input[type="date"],
    .filter-button {
        padding: 0.5rem;
        border-radius: 4px;
        border: 1px solid #ccc;
        font-size: 1rem;
        width: 100%;
        margin-bottom: 1rem;
    }

    .filter-button {
        background-color: #007bff;
        color: white;
        border: none;
        cursor: pointer;
        font-size: 1rem;
    }

        .filter-button:hover {
            background-color: #0056b3;
        }
</style>

<script>
    const filterIcon = document.getElementById("filter-icon");
    const filterModal = document.getElementById("filter-modal");
    const closeModal = document.getElementById("close-modal");
    const resetIcon = document.getElementById("reset-icon");

    filterIcon.addEventListener("click", () => {
        filterModal.style.display = "block";
    });

    closeModal.addEventListener("click", () => {
        filterModal.style.display = "none";
    });

    window.addEventListener("click", (e) => {
        if (e.target === filterModal) {
            filterModal.style.display = "none";
        }
    });

    // Reset filters
    resetIcon.addEventListener("click", () => {
        window.location.href = window.location.pathname; // Reloads the page without query parameters
    });

</script>
