@using Highsoft.Web.Mvc.Charts
@using XBCADAttendance.Models.ViewModels
@model AdminViewModel

<script src="https://code.highcharts.com/highcharts.js"></script>
<style>
    .dashboard {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        margin: 0;
        padding: 20px;
    }

    .grid-container {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
        margin-bottom: 20px;
    }

    .chart-container {
        display: grid;
        grid-template-columns: 2fr 3fr;
        gap: 20px;
    }

    .card, .chart {
        background: #ffffff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        padding: 20px;
        transition: transform 0.2s;
    }

        .card:hover, .chart:hover {
            transform: translateY(-5px);
        }

        .card h2, .chart h2 {
            margin-top: 0;
            color: #333;
        }

        .card p, .chart p {
            color: #666;
        }

    .logout-button {
        position: absolute;
        top: 20px;
        right: 20px;
        padding: 10px 20px;
        background-color: #ff4b4b;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

        .logout-button:hover {
            background-color: #e04343;
        }

    .completed {
        color: green;
    }

    .not-completed {
        color: red;
    }

</style>

@{
    Layout = "_AdminLayout";
}
<div class="head-title">
    <div class="left">
        <h1>Overview</h1>
        <ul class="breadcrumb">
            <li><a href="#">Home</a></li>
            <li><i class='bx bx-chevron-right'></i></li>
            <li><a class="active" href="#">Overview</a></li>
        </ul>

    </div>
</div>
    <ul class="box-info">
    <li>
        <span class="text">
            <h3>@Model.Students.Count</h3>
            <p>Students</p>
        </span>
    </li>
    <li>
        <span class="text">
            <h3>@Model.Staff.Count</h3>
            <p>Staff</p>
        </span>
    </li>

    </ul>
<div class="table-data">
    <div class="todo">
        <div class="head">
            <h3>Ranked Achievers</h3>
            <i class='bx bx-sort-up' onclick="sortStudents('desc')" style="cursor: pointer; margin-left: 10px;"></i>
            <i class='bx bx-sort-down' onclick="sortStudents('asc')" style="cursor: pointer; margin-left: 5px;"></i>
        </div>
        <ul class="todo-list" id="studentList">
            @foreach (var student in Model.GetStudentsWithAttendance().Result.OrderByDescending(s => s.AttendancePercentage))
            {
                <li class="@(student.AttendancePercentage >= 75 ? "completed" : "not-completed")">
                    <p>@student.StudentName - @student.AttendancePercentage%</p>
                    <i class='bx bx-dots-vertical-rounded'></i>
                </li>
            }
        </ul>
    </div>


<script>
    function sortStudents(order) {
        const list = document.getElementById('studentList');

        const items = Array.from(list.getElementsByTagName('li'));

        items.sort((a, b) => {
            const aValue = parseFloat(a.querySelector('p').textContent.split('-')[1].replace('%', '').trim());
            const bValue = parseFloat(b.querySelector('p').textContent.split('-')[1].replace('%', '').trim());
            return order === 'asc' ? aValue - bValue : bValue - aValue;
        });

        list.innerHTML = '';
        items.forEach(item => list.appendChild(item));
    }
</script>

<div class="order">
<div class="chart-container">
            <h3 style="color: var(--dark); z-index: 999;">Average Attendance per Lecturer</h3>
    <!-- Pie Chart for Average Attendance per Lecturer -->
    <div id="PieChart" style="width: 400px; height: 400px;"></div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Highcharts.chart("PieChart", {
                chart: {
                    type: "pie",
                    backgroundColor: "var(--light)"
                },
                title: {
                    text: ""
                },
                series: [{
                    name: "Attendance",
                    data: @Html.Raw(Json.Serialize(Model.LecturerAttendanceChartData.Select(dp => new
            {
                name = dp.Name,
                y = dp.Y
            })))
                        }]
            });
        });
    </script>
    </div>
    </div>
    <div class="order">
        <div class="chart-container">
        <h3 style="color: var(--dark); z-index: 999;">Average Attendance per Module</h3>
    <div id="LineChart" style="width: 400px; height: 400px;"></div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            Highcharts.chart("LineChart", {
                chart: {
                    type: "area",
                    backgroundColor: "var(--light)"
                },
                title: {
                    text: ""
                },
                xAxis: {
                    categories: @Html.Raw(Json.Serialize(Model.ModuleAttendanceChartData.Select(dp => dp.Name))),
                    title: {
                        text: "Modules"
                    }
                },
                yAxis: {
                    title: {
                        text: "Average Attendance"
                    }
                },
                series: [{
                    name: "Attendance",
                    data: @Html.Raw(Json.Serialize(Model.ModuleAttendanceChartData.Select(dp => dp.Y)))
                        }]
            });
        });
    </script>
    </div>
    
</div>



