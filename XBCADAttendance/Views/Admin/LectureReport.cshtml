@using XBCADAttendance.Models.ViewModels
@model AdminViewModel
@{
    Layout = "_AdminLayout";
}

<div class="head-title">
    <div class="left">
        <h1>Lecture Report</h1>
        <ul class="breadcrumb">
            <li><a href="#">Home</a></li>
            <li><i class='bx bx-chevron-right'></i></li>
            <li><a class="active" href="#">Lecture Report</a></li>
        </ul>
    </div>
</div>

<div class="table-data">
    <div class="order">
        <table>
            <thead>
                <tr>
                    <th class="ree"></th>
                    <th class="ree">Lecturer</th>
                    <th class="ree">Module</th>
                    <th class="ree">Classroom</th>
                    <th class="ree">Date</th>
                    <th class="ree">Start</th>
                    <th class="ree">Finish</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var lecture in Model.StaffLectures)
                {
                    <!-- Main row that toggles the accordion -->
                    <tr class="accordion-toggle" onclick="toggleAccordion(this)">
                        <td><i class="bx bx-chevron-down"></i></td>
                        <td>@Model.GetLecturer(lecture)</td>
                        <td>@lecture.ModuleCode</td>
                        <td>@lecture.ClassroomCode</td>
                        <td>@lecture.Date</td>
                        <td>@lecture.Start</td>
                        <td>@lecture.Finish</td>
                    </tr>

                    var students = await Model.GetStudentsFromLecture(lecture.LectureId);
                    if (students != null && students.Count > 0)
                    {
                        <tr class="accordion-content">
                            <th colspan="1"></th>
                            <th colspan="6" class="ree">Students Attended</th>
                        </tr>
                    }

                    <!-- Hidden rows showing each user’s details -->
                    @foreach (var student in students)
                    {
                        <tr class="accordion-content">
                            <td colspan="1"></td>
                            <td colspan="6">@student.StudentNo  -  @student.User.UserName</td>
                            
                        </tr>
                        
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    // Function to toggle accordion rows
    function toggleAccordion(element) {
        const icon = element.querySelector(".bx-chevron-down");

        // Find all sibling rows that are accordion-content rows
        let contentRows = [];
        let currentRow = element.nextElementSibling;
        while (currentRow && currentRow.classList.contains("accordion-content")) {
            contentRows.push(currentRow);
            currentRow = currentRow.nextElementSibling;
        }

        // Toggle visibility of each accordion content row
        let isOpen = contentRows[0].style.display === "table-row";
        contentRows.forEach(row => {
            row.style.display = isOpen ? "none" : "table-row";
        });

        // Toggle the chevron state
        if (icon) {
            icon.classList.toggle("open", !isOpen);
        }
    }

    // Initialize accordion states on page load
    document.addEventListener("DOMContentLoaded", () => {
        const toggles = document.querySelectorAll(".accordion-toggle");

        toggles.forEach(toggle => {
            const icon = toggle.querySelector(".bx-chevron-down");
            let contentRows = [];
            let currentRow = toggle.nextElementSibling;

            while (currentRow && currentRow.classList.contains("accordion-content")) {
                contentRows.push(currentRow);
                currentRow = currentRow.nextElementSibling;
            }

            // Ensure all rows are initially hidden and chevron is closed
            contentRows.forEach(row => (row.style.display = "none"));
            if (icon) {
                icon.classList.remove("open");
            }
        });
    });


</script>
